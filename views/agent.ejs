<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>메인</title>
    <!-- Bootstrap core CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/font.css">
</head>
<style>
    .img {
        width: 32px;
        height: 32px;
    }

    #loading {
        display: inline-block;
        width: 30px;
        height: 30px;
        border: 3px solid rgba(255,255,255,.3);
        border-radius: 50%;
        border-top-color: black;
        animation: spin 1s ease-in-out infinite;
        -webkit-animation: spin 1s ease-in-out infinite;
        color: black;
    }

    @keyframes spin {
        to { -webkit-transform: rotate(360deg); }
    }
    @-webkit-keyframes spin {
        to { -webkit-transform: rotate(360deg); }
    }
</style>
<body>
<!--진행상황 진행할 예정 내용-->
<% include header.ejs %>

<button class="btn btn-primary float-end mt-3 me-3 btn-lg" data-bs-toggle="modal" data-bs-target="#exampleModal">ADD
</button>
<div class="content container-fluid bg-white" style="padding-left: 250px;">
    <div class="row mt-5">
        <% agents.forEach(agent => { %>
            <div class="col-md-4 mt-5">
                <div class="card mb-3" style="height: 150px;">
                    <div class="card-body">
                        <h3 class="card-title"><%= agent.name %></h3>
                        <p class="card-text"><%= agent.path %></p>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <% if (agent.status === 0) { %>

                        <% } else { %>
                                <div id="loading"></div>
                        <% } %>
                        <span></span>
                        <div>
                            <img src="/images/edit-button.png" class="img" data-bs-toggle="modal"
                                 data-bs-target="#modifyModal" data-id="<%= agent.id %>">
                            <img src="/images/delete.png" class="img" onclick="dropAgent(<%= agent.id %>)">
                            <% if (agent.status === 0) { %>
                                <img src="/images/play.png" class="img"  onclick="start(<%= agent.id %>);" >
                            <% } else { %>
                                <img src="/images/stop-button.png" class="img" onclick="start(<%= agent.id %>);">
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="padding-top: 70px; overflow: auto; height: 700px;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agent 생성</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="/agent" method="post">
                    <div class="mb-3">
                        <label class="form-label">NAME</label>
                        <input type="text" class="form-control" name="name">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">PATH</label>
                        <input type="text" class="form-control" name="path">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">USERNAME</label>
                        <input type="text" class="form-control" name="username">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">PASSWORD</label>
                        <input type="password" class="form-control" name="password">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">DATABASE</label>
                        <input type="text" class="form-control" name="database">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">TABLE</label>
                        <input type="text" class="form-control" name="table">
                    </div>
                    <button type="submit" class="btn btn-primary w-100">생성</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modifyModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="padding-top: 70px; overflow: auto; height: 700px;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agent 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">NAME</label>
                    <input type="text" class="form-control" name="name" id="name">
                </div>
                <div class="mb-3">
                    <label class="form-label">PATH</label>
                    <input type="text" class="form-control" name="path" id="path">
                </div>
                <div class="mb-3">
                    <label class="form-label">USERNAME</label>
                    <input type="text" class="form-control" name="username" id="username">
                </div>
                <div class="mb-3">
                    <label class="form-label">PASSWORD</label>
                    <input type="password" class="form-control" name="password" id="password">
                </div>
                <div class="mb-3">
                    <label class="form-label">DATABASE</label>
                    <input type="text" class="form-control" name="database" id="database">
                </div>
                <div class="mb-3">
                    <label class="form-label">TABLE</label>
                    <input type="text" class="form-control" name="table" id="table">
                </div>
                <button type="submit" class="btn btn-primary w-100" onclick="modify()">수정</button>
            </div>
        </div>
    </div>
</div>

<% include sidebar.ejs %>

<!-- Bootstrap core JavaScript -->
<script src="/javascripts/script.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  // JavaScript code
  let agentId;
  document.addEventListener('DOMContentLoaded', function () {
    const modifyButtons = document.querySelectorAll('[data-bs-toggle="modal"]');
    const modifyModal = document.getElementById('modifyModal');

    const updateModalInputs = (response) => {
      const modalInputs = modifyModal.querySelectorAll('input[name]');
      modalInputs.forEach((input) => {
        const inputName = input.getAttribute('name');
        input.value = response[inputName];
      });
    };

    const fetchAgentInfo = async (agentId) => {
      try {
        const response = await fetch(`/agent/${agentId}`);
        if (response.ok) {
          const data = await response.json();
          updateModalInputs(data);
        } else {
          console.error(response.statusText);
        }
      } catch (error) {
        console.error(error);
      }
    };

    modifyButtons.forEach((button) => {
      button.addEventListener('click', function () {
        agentId = this.dataset.id;
        console.log(this.dataset)
        fetchAgentInfo(agentId);
      });
    });
  });

  const start = async (id) => {
    try {
      const response = await fetch(`/agent/start/${id}`, {
        method: 'GET',
      });
      console.log(response);
      location.href = "/agent";
    } catch (error) {
      console.error(error);
    }
  }

  const modify = async () => {
    const fields = ['name', 'path', 'username', 'password', 'database', 'table'];
    const updatedAgent = fields.reduce((obj, field) => {
      obj[field] = document.getElementById(field).value;
      return obj;
    }, {});

    try {
      const response = await fetch(`/agent/${agentId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(updatedAgent)
      });

      if (response.ok) {
        alert("수정되었습니다.");
        location.href = "/agent";
      } else {
        console.error(response.status);
      }
    } catch (error) {
      console.error(error);
    }
  };
</script>
</body>
</html>
